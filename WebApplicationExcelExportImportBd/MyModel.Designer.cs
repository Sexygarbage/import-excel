//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WebApplicationExcelExportImportBd
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class MuDatabaseEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект MuDatabaseEntities, используя строку соединения из раздела "MuDatabaseEntities" файла конфигурации приложения.
        /// </summary>
        public MuDatabaseEntities() : base("name=MuDatabaseEntities", "MuDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MuDatabaseEntities.
        /// </summary>
        public MuDatabaseEntities(string connectionString) : base(connectionString, "MuDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MuDatabaseEntities.
        /// </summary>
        public MuDatabaseEntities(EntityConnection connection) : base(connection, "MuDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<BookMaster> BookMaster
        {
            get
            {
                if ((_BookMaster == null))
                {
                    _BookMaster = base.CreateObjectSet<BookMaster>("BookMaster");
                }
                return _BookMaster;
            }
        }
        private ObjectSet<BookMaster> _BookMaster;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet BookMaster. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBookMaster(BookMaster bookMaster)
        {
            base.AddObject("BookMaster", bookMaster);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MuDatabaseModel", Name="BookMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookMaster : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта BookMaster.
        /// </summary>
        /// <param name="bookId">Исходное значение свойства BookId.</param>
        public static BookMaster CreateBookMaster(global::System.Int32 bookId)
        {
            BookMaster bookMaster = new BookMaster();
            bookMaster.BookId = bookId;
            return bookMaster;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                if (_BookId != value)
                {
                    OnBookIdChanging(value);
                    ReportPropertyChanging("BookId");
                    _BookId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookId");
                    OnBookIdChanged();
                }
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookName
        {
            get
            {
                return _BookName;
            }
            set
            {
                OnBookNameChanging(value);
                ReportPropertyChanging("BookName");
                _BookName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookName");
                OnBookNameChanged();
            }
        }
        private global::System.String _BookName;
        partial void OnBookNameChanging(global::System.String value);
        partial void OnBookNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookAuthor
        {
            get
            {
                return _BookAuthor;
            }
            set
            {
                OnBookAuthorChanging(value);
                ReportPropertyChanging("BookAuthor");
                _BookAuthor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookAuthor");
                OnBookAuthorChanged();
            }
        }
        private global::System.String _BookAuthor;
        partial void OnBookAuthorChanging(global::System.String value);
        partial void OnBookAuthorChanged();

        #endregion

    
    }

    #endregion

    
}
